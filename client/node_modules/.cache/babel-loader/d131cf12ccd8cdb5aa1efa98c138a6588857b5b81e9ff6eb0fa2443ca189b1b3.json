{"ast":null,"code":"var _jsxFileName = \"/Users/anamika/myFolders/soul.ai/client/src/components/case/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, TextField, Button, List, ListItem, ListItemText, Typography } from '@mui/material';\nimport io from 'socket.io-client';\n\n// This would be configured to your server's address\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst Chat = ({\n  caseId,\n  userId\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.emit('joinCase', caseId);\n    socket.on('previousMessages', msgs => {\n      setMessages(msgs);\n    });\n    socket.on('newMessage', msg => {\n      setMessages(prevMessages => [...prevMessages, msg]);\n    });\n    return () => {\n      socket.off('previousMessages');\n      socket.off('newMessage');\n    };\n  }, [caseId]);\n  const sendMessage = e => {\n    e.preventDefault();\n    if (message) {\n      socket.emit('sendMessage', {\n        caseId,\n        sender: userId,\n        content: message\n      });\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Case Discussion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: 300,\n        border: '1px solid #ccc',\n        borderRadius: 1,\n        p: 2,\n        overflowY: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: msg.content,\n            secondary: msg.sender.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: sendMessage,\n      sx: {\n        display: 'flex',\n        mt: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        sx: {\n          ml: 1\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"WDgp24k/FdZO6Mwa4GS0i45C6ek=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","Box","TextField","Button","List","ListItem","ListItemText","Typography","io","jsxDEV","_jsxDEV","socket","Chat","caseId","userId","_s","message","setMessage","messages","setMessages","emit","on","msgs","msg","prevMessages","off","sendMessage","e","preventDefault","sender","content","sx","mt","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","height","border","borderRadius","p","overflowY","map","index","primary","secondary","name","component","onSubmit","display","fullWidth","value","onChange","target","placeholder","type","ml","_c","$RefreshReg$"],"sources":["/Users/anamika/myFolders/soul.ai/client/src/components/case/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, TextField, Button, List, ListItem, ListItemText, Typography } from '@mui/material';\nimport io from 'socket.io-client';\n\n// This would be configured to your server's address\nconst socket = io('http://localhost:5000');\n\nconst Chat = ({ caseId, userId }) => {\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n\n    useEffect(() => {\n        socket.emit('joinCase', caseId);\n\n        socket.on('previousMessages', (msgs) => {\n            setMessages(msgs);\n        });\n\n        socket.on('newMessage', (msg) => {\n            setMessages((prevMessages) => [...prevMessages, msg]);\n        });\n\n        return () => {\n            socket.off('previousMessages');\n            socket.off('newMessage');\n        };\n    }, [caseId]);\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        if (message) {\n            socket.emit('sendMessage', { caseId, sender: userId, content: message });\n            setMessage('');\n        }\n    };\n\n    return (\n        <Box sx={{ mt: 4 }}>\n            <Typography variant=\"h6\">Case Discussion</Typography>\n            <Box sx={{ height: 300, border: '1px solid #ccc', borderRadius: 1, p: 2, overflowY: 'auto' }}>\n                <List>\n                    {messages.map((msg, index) => (\n                        <ListItem key={index}>\n                            <ListItemText primary={msg.content} secondary={msg.sender.name} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Box>\n            <Box component=\"form\" onSubmit={sendMessage} sx={{ display: 'flex', mt: 1 }}>\n                <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                    placeholder=\"Type your message...\"\n                />\n                <Button type=\"submit\" variant=\"contained\" sx={{ ml: 1 }}>\n                    Send\n                </Button>\n            </Box>\n        </Box>\n    );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}